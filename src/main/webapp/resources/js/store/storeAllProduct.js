let cpath = "";
let storeUrl = "";
let allProducts = [];  // Ï†ÑÏ≤¥ ÏÉÅÌíà Ï†ÄÏû•
const PRODUCTS_PER_PAGE = 16;

$(() => {
  cpath = document.getElementById("cpath").value;
  storeUrl = document.getElementById("storeUrl").value;

	  // ÌéòÏù¥ÏßÄ Î°úÎìúÎêòÎ©¥ Ï†ÑÏ≤¥ÏÉÅÌíà Ï°∞Ìöå
	  allProduct();
  
	  // Ïπ¥ÌÖåÍ≥†Î¶¨ ÏòÅÏó≠ 
	  loadCategories();
	  
	  // UCategory Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú Ï°¥Ïû¨ÌïòÎäî DCategory Ï°∞Ìöå
	  $(document).on("click", ".toggle-arrow", function () {
	  const uCategoryName = $(this).data("category-id");
	  const dAreaId = `dCategory-area-${uCategoryName}`;
	  const $target = $(`#${dAreaId}`);
	
	  if ($target.is(":visible")) {
	    $target.slideUp();
	  } else {
	    if ($target.children().length === 0) {
	      selectDCategory(uCategoryName, renderDCategories);
	    } else {
	      $target.slideDown();
	    }
	  }
	});
	
	
		 // Í≤ÄÏÉâÌïòÍ∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú ÏÑ†ÌÉùÌïú Ïπ¥ÌÖåÍ≥†Î¶¨Í∞Ä .Ï°¥Ïû¨ÌïòÎäî ÏÉÅÌíà Ï°∞Ìöå
	 	 $(document).on("click",".category-search-btn",function () {
		  const filters = collectCategoryFilters();
		  fetchFilteredProducts(filters);
		});
  

	 // Ï°∞Í±¥ Ï°∞ÌöåÏãú
	 $(".sort-tab").on("click",function(){
	 	$(".sort-tab").removeClass("active");
	 	$(this).addClass("active");
	 	
	 	const sortValue = $(this).data("sort");
	 	sortProducts(sortValue);
	 });
 
	  // ÏÉÅÌíàÎ™ÖÏúºÎ°ú Í≤ÄÏÉâÏãú
	  $("#search-button").on("click", function () {
	    const inputData = $("#keyword").val();
	    if (inputData.trim() !== "") {
	      searchProductName(inputData);
	    } else {
	      alert("ÏÉÅÌíàÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.");
	    }
	  });
  
	  // Ï†ÑÏ≤¥ÏÑ†ÌÉù Ï≤¥ÌÅ¨Ïãú ÌïòÏúÑ Ï≤¥ÌÅ¨Î∞ïÏä§ Ï†ÑÏ≤¥ ÏÑ†ÌÉù
	  $(document).on("change", ".check-all", function () {
	  // Ìï¥Îãπ Ï†ÑÏ≤¥ÏÑ†ÌÉù Ï≤¥ÌÅ¨Î∞ïÏä§Í∞Ä ÏÜçÌïú main-category-block Ï∞æÍ∏∞
	  const $mainBlock = $(this).closest(".main-category-block");
	  // Ìï¥Îãπ Î∏îÎ°ù ÏïàÏùò Î™®Îì† ÏÑúÎ∏åÏπ¥ÌÖåÍ≥†Î¶¨ Ï≤¥ÌÅ¨Î∞ïÏä§Î•º ÏÑ†ÌÉù ÎòêÎäî Ìï¥Ï†ú
	  const isChecked = $(this).is(":checked");
	  $mainBlock.find(".subcategory-container input[type='checkbox']").prop("checked", isChecked);
	});
	
});


// Ï≤¥ÌÅ¨Î∞ïÏä§Ïùò Ï≤¥ÌÅ¨Îêú Ïπ¥ÌÖåÍ≥†Î¶¨Ïùò IDÍ∞íÏùÑ ÏàòÏßëÌïòÎäî Ìï®Ïàò
function collectCategoryFilters() {
  const typeIds = $('.type-checkbox:checked').map(function () {
    return $(this).val();
  }).get();

  const uIds = $('.u-checkbox:checked').map(function () {
    return $(this).val();
  }).get();

  const dIds = $('.d-checkbox:checked').map(function () {
    return $(this).val();
  }).get();

  const keyword = $('#search-input').val();  // Í≤ÄÏÉâÏñ¥
  const sort = $('.sort-tab.active').data('sort') || 'latest';  // ÏÑ†ÌÉùÎêú Ï†ïÎ†¨ Í∏∞Ï§Ä

  return { type: typeIds, u: uIds, d: dIds, keyword, sort };
}




// Ï°∞Í±¥Ï°∞Ìöå
function sortProducts(sort){
  const link = `${cpath}/api/${storeUrl}/products`;
  
  $.ajax({
  	url: link,
  	dataType: "Json",
  	data: {sort : sort},
  	success: function(result){
  	renderProductList(result.data);
  	},
  	error: function (xhr, status, error) {
      console.error("Ï°∞Í±¥Ï°∞Ìöå ÏöîÏ≤≠ Ïã§Ìå®:", error);
    }
  });
};

// Ïπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå
function loadCategories() {
  const link = `${cpath}/api/${storeUrl}/categories`;

  $.ajax({
    url: link,
    dataType: "json",
    success: function (result) {
      const typeC = result.typeCategory;
      const uC = result.uCategory;
	  renderTypeCategories(typeC);
	  renderUCategories(uC);	
    },
    error: function (xhr, status, error) {
      console.error("Ïπ¥ÌÖåÍ≥†Î¶¨ ÏöîÏ≤≠ Ïã§Ìå®:", error);
    }
  });
};

// UÏπ¥ÌÖåÍ≥†Î¶¨Ïóê Ìï¥ÎãπÌïòÎäî DÏπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå Ìï®Ïàò
function selectDCategory(uCategoryName, renderDCategories){
	const link = `${cpath}/api/${storeUrl}/categories`;
	
	$.ajax({
		url: link,
		data: { uCategoryName },
		dataType: "json",
		success: function(result){
		console.log("DÏπ¥ÌÖåÍ≥†Î¶¨ : " , result);
			renderDCategories(result, uCategoryName);
		},
		error: function (xhr, status, error) {
      	console.error("DÏπ¥ÌÖåÍ≥†Î¶¨ ÏöîÏ≤≠ Ïã§Ìå®:", error);
    }
	});
};

// TypeÏπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå
function renderTypeCategories(typeC){
	const typeArea = document.getElementById("type-category-section");
  typeArea.innerHTML = "";

  let html = "";

  typeC.forEach(t => {
    html += `
      <div class="type-category-block">
        <div class="main-category-header">
          <span class="category-name">${t.name}</span>
          <label class="select">
            <input type="checkbox"  class="type-checkbox" value="${t.id}"> ÏÑ†ÌÉù
          </label>
        </div>
      </div>
    `;
  });

  typeArea.innerHTML = html;
};

// UÏπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå
function renderUCategories(uC) {
  const uArea = document.getElementById("category-section");
  uArea.innerHTML = "";

  let html = "";

  uC.forEach(u => {
    html += `
      <div id="uCategory-area" class="main-category-block" data-category-id="${u.name}">
        <div class="main-category-header">
          <span class="category-name">${u.name}</span>
          <div class="toggle-arrow" data-category-id="${u.name}">üîΩ  </div>
          <label class="select-all">
            <input type="checkbox" class="check-all u-checkbox" value="${u.id}"> Ï†ÑÏ≤¥ ÏÑ†ÌÉù
          </label>
        </div>
        <!-- Ïó¨Í∏∞ÏóêÎßå subcategory-container Ï°¥Ïû¨ -->
        <div class="subcategory-container" id="dCategory-area-${u.name}" style="display: none;"></div>
      </div>
    `;
  });

  uArea.innerHTML = html;
}


// DÏπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå
function renderDCategories(dC, uCategoryName) {
  const dArea = document.getElementById(`dCategory-area-${uCategoryName}`);
  if (!dArea) return;

  let html = "";

  dC.forEach((d) => {
    html += `
      <label>
        <input type="checkbox" class="d-checkbox" value="${d.id}"> ${d.name}
      </label>
    `;
  });

  dArea.innerHTML = html;
  dArea.style.display = "block";
}


// Ï≤¥ÌÅ¨Î∞ïÏä§Ïùò Ï≤¥ÌÅ¨Îêú Ïπ¥ÌÖåÍ≥†Î¶¨ ÏöîÏ≤≠ Ìï®Ïàò
function fetchFilteredProducts(filters) {
  const url = `${cpath}/api/${storeUrl}/products`;
  
  Object.keys(filters).forEach(key => {
  	if(Array.isArray(filters[key]) && filters[key].length === 0){
  		filters[key] = '';				// Îπà Î∞∞Ïó¥Ïù¥Î©¥ Îπà Î¨∏ÏûêÏó¥Î°ú
  	}
  });
	
  $.ajax({
    url: url,
    method: 'GET',
    data: filters,
    traditional: true,  						// Î∞∞Ïó¥ ÏøºÎ¶¨ ÌååÎùºÎØ∏ÌÑ∞Î•º name=value1&name=value2Î°ú Î≥¥ÎÉÑ
    success: function (result) {
      renderProductList(result.data);
    },
    error: function (xhr, status, error) {
      console.error('ÏÉÅÌíà Ï°∞Ìöå Ïã§Ìå®:', error);
    }
  });
}


// Ï†ÑÏ≤¥ÏÉÅÌíà Ï°∞Ìöå
function allProduct() {
  const link = `${cpath}/api/${storeUrl}/products`;

  $.ajax({
    url: link,
    dataType: "json",
    success: function (result) {
    
      allProducts = result.data || [];
      renderProductList(allProducts.slice(0, PRODUCTS_PER_PAGE));
      renderPagination(allProducts.length, 1);
      
    },
    error: function (xhr, status, error) {
      console.error("Ï†ÑÏ≤¥ÏÉÅÌíà Ï°∞Ìöå Ïã§Ìå®:", error);
    }
  });
}

// ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖòÏùÑ ÏúÑÌï¥ Ïô∏Î∂ÄJSÌò∏Ï∂úÌï† Ìï®Ïàò
function changePage(pageNumber) {
  const startIndex = (pageNumber - 1) * PRODUCTS_PER_PAGE;
  const endIndex = startIndex + PRODUCTS_PER_PAGE;
  const paginated = allProducts.slice(startIndex, endIndex);

  renderProductList(paginated); // ÏÉÅÌíà ÌëúÏãú Ìï®Ïàò
  renderPagination(allProducts.length, pageNumber); // ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò Ïû¨Î†åÎçîÎßÅ
}


// ÏÉÅÌíàÎ™Ö Í≤ÄÏÉâ Ï°∞Ìöå
function searchProductName(keyword) {
  const link = `${cpath}/api/${storeUrl}/products`;

  $.ajax({
    url: link,
    data: { keyword: keyword },
    dataType: "json",
    success: function (result) {
      console.log("Í≤ÄÏÉâ Í≤∞Í≥º:", result.data);
      renderProductList(result.data);
    },
    error: function (xhr, status, error) {
      console.error("Í≤ÄÏÉâ ÏöîÏ≤≠ Ïã§Ìå®:", error);
      alert("Í≤ÄÏÉâ Ïã§Ìå®, Îã§Ïãú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
    }
  });
}


// Í≥µÌÜµ ÏÇ¨Ïö© Ìï®Ïàò
function renderProductList(products) {
  const wrapper = document.getElementById("product-list");
  wrapper.innerHTML = "";

  products.forEach(product => {
    const priceText = product.price
      ? Number(product.price).toLocaleString() + "Ïõê"
      : "Í∞ÄÍ≤© Ï†ïÎ≥¥ ÏóÜÏùå";

    const html = `
      <div class="product-card" onclick="location.href='${cpath}/${storeUrl}/productdetail/${product.productId}'">
        <img class="product-img" src="${cpath}/resources/productImages/${product.pimgUrl}" alt="${product.productName}" />
        <div class="product-name">${product.productName}</div>
        <div class="product-category-list">
          <span class="product-category">${product.categoryName || ''}</span>
          <span class="product-category">${product.ucategoryName || ''}</span>
          <span class="product-category">${product.dcategoryName || ''}</span>
        </div>
        <div class="product-price">${priceText}</div>
      </div>
    `;
    wrapper.insertAdjacentHTML("beforeend", html);
  });
}
