<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.chacha.create.common.mapper.order.OrderInfoMapper">

	<resultMap id="orderInfoResultMap" type="orderInfoEntity">
		<id property="orderId" column="order_id" />
		<result property="memberId" column="member_id" />
		<result property="orderDate" column="order_date" />
		<result property="orderName" column="order_name" />
		<result property="orderPhone" column="order_phone" />
		<result property="addressId" column="address_id" />
		<result property="cardId" column="card_id" />
		<result property="orderStatus" column="order_status" />
	</resultMap>

	<select id="selectAll" resultMap="orderInfoResultMap">
		SELECT * FROM order_info
	</select>

	<select id="selectByOrderId" parameterType="int"
		resultMap="orderInfoResultMap">
		SELECT * FROM order_info WHERE order_id = #{orderId}
	</select>

	<select id="selectByMemberId" parameterType="int"
		resultMap="orderInfoResultMap">
		SELECT * FROM order_info WHERE member_id = #{memberId}
	</select>

	<insert id="insert" parameterType="orderInfoEntity">
		<selectKey keyProperty="orderId" resultType="int" order="BEFORE">
	        SELECT seq_order_info_id.NEXTVAL FROM dual
	    </selectKey>
		INSERT INTO order_info
		(order_id, member_id, order_date, order_name,
		order_phone, address_id,
		card_id, order_status)
		VALUES (#{orderId}, #{memberId},
		#{orderDate}, #{orderName},
		#{orderPhone}, #{addressId}, #{cardId},
		#{orderStatus})
	</insert>

	<update id="update" parameterType="orderInfoEntity">
		UPDATE order_info
		SET member_id
		= #{memberId},
		order_date = #{orderDate},
		order_name = #{orderName},
		order_phone = #{orderPhone},
		address_id = #{addressId},
		card_id =
		#{cardId},
		order_status = #{orderStatus}
		WHERE order_id = #{orderId}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM order_info WHERE
		order_id = #{orderId}
	</delete>


	<select id="selectByStatus" resultType="map"
		parameterType="string">
		SELECT order_info.order_status, COUNT(*)
		FROM order_info
		JOIN order_detail ON order_info.order_id = order_detail.order_id
		JOIN
		product ON order_detail.product_id = product.product_id
		JOIN store ON
		product.store_id = store.store_id
		WHERE store.store_Url = #{storeUrl}
		GROUP BY order_info.order_status
	</select>

	<select id="selectByDayOrderSum"
		resultType="orderSumDTO"
		parameterType="string">
		SELECT TO_CHAR(order_info.order_date, 'YYYY-MM-DD') AS
		saleDate,
		SUM(order_detail.order_cnt * order_detail.order_price) AS total
		FROM order_info
		JOIN order_detail ON order_info.order_id = order_detail.order_id
		JOIN product ON order_detail.product_id = product.product_id
		JOIN store ON product.store_id = store.store_id
		WHERE store.store_Url = #{storeUrl} AND order_info.order_date >= SYSDATE - 7
		GROUP BY TO_CHAR(order_info.order_date, 'YYYY-MM-DD')
		ORDER BY saleDate
	</select>
	
	<select id="selectForOrderStatus" resultType="com.chacha.create.common.enums.order.OrderStatusEnum" parameterType="String">
		select DISTINCT oi.order_status
		from store s
		left outer join product p on(s.store_id = p.store_id)
		join order_detail od on(p.product_id = od.product_id)
		left outer join order_info oi on(od.order_id = oi.order_id)
		where s.store_url = #{StoreUrl}
	</select>

</mapper>
