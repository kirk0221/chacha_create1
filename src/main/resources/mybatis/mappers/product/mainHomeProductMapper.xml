<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chacha.create.common.mapper.product.MainHomeProductMapper">
	
	<resultMap id="mainMainpageResultMap" type="com.chacha.create.common.dto.product.MainHomeDTO">
		<result property="storeName" column="store_name" />
		<result property="storeUrl" column="store_url" />
		<result property="logoImg" column="logo_img" />
		<result property="storeDetail" column="store_detail" />
		<result property="categoryName" column="category_name" />
		<result property="saleCnt" column="sale_cnt" />
		<result property="Rnk" column="rnk" />
	</resultMap>	


	<resultMap id="mainHomeProductResultMap" type="storeProductDTO">
		<id property="productId" column="product_id" />
		<result property="storeId" column="store_id" />
		<result property="typeCategoryId" column="type_category_id" />
		<result property="dCategoryId" column="d_category_id" />
		<result property="productName" column="product_name" />
		<result property="price" column="price" />
		<result property="productDetail" column="product_detail" />
		<result property="stock" column="stock" />
		<result property="productDate" column="product_date" />
		<result property="lastModifiedDate" column="last_modified_date" />
		<result property="saleCnt" column="sale_cnt" />
		<result property="viewCnt" column="view_cnt" />
		
		<result property="typeCategoryName" column="type_category_name"/>
		<result property="dCategoryName" column="d_category_name"/>
		<result property="uCategoryName" column="u_category_name"/>
		<result property="pImgUrl" column="p_img_url"/>
	</resultMap>
	
	<!-- 메인 홈  인기스토어 리스트 -->
	<select id="selectForBestStore" resultMap="mainMainpageResultMap" parameterType="map">
	<![CDATA[
	SELECT *
	FROM (
	    SELECT s.store_id, s.store_name, s.store_url, s.logo_img, s.store_detail, cat.category_name, s.sale_cnt,
	        ROW_NUMBER() OVER (PARTITION BY s.store_id ORDER BY cat.cnt DESC) AS rnk
	    FROM store s
	    JOIN product p ON s.store_id = p.store_id
	    JOIN (
	        SELECT 
	            p.store_id,
	            tc.type_category_id AS category_id,
	            tc.type_category_name AS category_name,
	            'type_category' AS category_type,
	            COUNT(*) AS cnt
	        FROM product p
	        JOIN type_category tc ON p.type_category_id = tc.type_category_id
	        GROUP BY p.store_id, tc.type_category_id, tc.type_category_name
	        UNION ALL
	        SELECT 
	            p.store_id,
	            dc.d_category_id AS category_id,
	            dc.d_category_name AS category_name,
	            'd_category' AS category_type,
	            COUNT(*) AS cnt
	        FROM product p
	        JOIN d_category dc ON p.d_category_id = dc.d_category_id
	        GROUP BY p.store_id, dc.d_category_id, dc.d_category_name
	        UNION ALL
	        SELECT 
	            p.store_id,
	            uc.u_category_id AS category_id,
	            uc.u_category_name AS category_name,
	            'u_category' AS category_type,
	            COUNT(*) AS cnt
	        FROM product p
	        JOIN d_category dc ON p.d_category_id = dc.d_category_id
	        JOIN u_category uc ON dc.u_category_id = uc.u_category_id
	        GROUP BY p.store_id, uc.u_category_id, uc.u_category_name
	    ) cat ON s.store_id = cat.store_id
	)
	WHERE rnk = 1
	AND SALE_CNT IS NOT NULL
	AND ROWNUM <= 10
	ORDER BY sale_cnt DESC
	]]>
	</select>
	
	
	<!-- 메인 홈  인기 상품 리스트 -->
	<select id="selectForBestProduct" resultMap="mainHomeProductResultMap" parameterType="map">
	<![CDATA[
	SELECT p.product_name, p.price, ca.type_category_name, dc.d_category_name, uc.u_category_name, img.p_img_url
	FROM product p
	LEFT JOIN type_category ca ON p.type_category_id = ca.type_category_id
	LEFT JOIN d_category dc ON p.d_category_id = dc.d_category_id
	LEFT JOIN u_category uc ON dc.u_category_id = uc.u_category_id
	LEFT JOIN (
	    SELECT product_id, p_img_url
	    FROM (
	        SELECT product_id, p_img_url,
	               ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY p_img_seq ASC) AS rn
	        FROM p_img
	    ) sub
	    WHERE rn = 1    
	) img ON p.product_id = img.product_id
	WHERE p.delete_check = 0
    AND ROWNUM <= 10
	ORDER BY sale_cnt DESC
	]]>
	</select>
	
	
	<!-- 메인 홈  최신 상품 리스트 -->
	<select id="selectForNewProduct" resultMap="mainHomeProductResultMap" parameterType="map">
	<![CDATA[
	SELECT p.product_name, p.price, ca.type_category_name, dc.d_category_name, uc.u_category_name, img.p_img_url, p.product_date
	FROM product p
	LEFT JOIN type_category ca ON p.type_category_id = ca.type_category_id
	LEFT JOIN d_category dc ON p.d_category_id = dc.d_category_id
	LEFT JOIN u_category uc ON dc.u_category_id = uc.u_category_id
	LEFT JOIN (
	    SELECT product_id, p_img_url
	    FROM (
	        SELECT product_id, p_img_url,
	               ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY p_img_seq ASC) AS rn
	        FROM p_img
	    ) sub
	    WHERE rn = 1    
	) img ON p.product_id = img.product_id
	WHERE p.delete_check = 0
    AND ROWNUM <= 10
	ORDER BY product_date DESC
	]]>
	</select>
	
	<!-- 사용자가 상품이름으로 검색했을때  -->
	<select id="selectByProductName" resultMap="mainHomeProductResultMap" parameterType="map">
	SELECT p.*, ca.type_category_name, dc.d_category_name, uc.u_category_name, img.p_img_url
		FROM product p JOIN (
								SELECT sto.store_id
								FROM store sto
								JOIN seller sel ON sto.seller_id = sel.seller_id
								WHERE sel.personal_check = 0
								) sid ON p.store_id = sid.store_id
		LEFT JOIN type_category ca ON p.type_category_id = ca.type_category_id
		LEFT JOIN d_category dc ON p.d_category_id = dc.d_category_id
		LEFT JOIN u_category uc ON dc.u_category_id = uc.u_category_id
		LEFT JOIN (
					SELECT product_id, p_img_url
					FROM (
					SELECT product_id, p_img_url,
					ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY p_img_seq ASC) AS rn
					FROM p_img
					) sub
					WHERE rn = 1
		) img ON p.product_id = img.product_id
	WHERE p.delete_check = 0
	AND p.product_name LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 메인홈의 전체 상품 조회 -->
	<select id="selectForProductList" resultMap="mainHomeProductResultMap" parameterType="map">
		SELECT p.*, ca.type_category_name, dc.d_category_name, uc.u_category_name, img.p_img_url
		FROM product p JOIN (
								SELECT sto.store_id
								FROM store sto
								JOIN seller sel ON sto.seller_id = sel.seller_id
								WHERE sel.personal_check = 0
								) sid ON p.store_id = sid.store_id
		LEFT JOIN type_category ca ON p.type_category_id = ca.type_category_id
		LEFT JOIN d_category dc ON p.d_category_id = dc.d_category_id
		LEFT JOIN u_category uc ON dc.u_category_id = uc.u_category_id
		LEFT JOIN (
					SELECT product_id, p_img_url
					FROM (
					SELECT product_id, p_img_url,
					ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY p_img_seq ASC) AS rn
					FROM p_img
					) sub
					WHERE rn = 1
		) img ON p.product_id = img.product_id
		WHERE p.delete_check = 0

		<!-- 카테고리 필터 -->
		<if test="categoryMap != null and categoryMap.size() > 0">
			AND (
			<if test="categoryMap.type != null">
				p.type_category_id IN
				<foreach collection="categoryMap.type" item="id" open="("
					separator="," close=")">
					#{id}
				</foreach>
			</if>
			<if test="categoryMap.d != null">
				<if test="categoryMap.type != null">OR</if>
				p.d_category_id IN
				<foreach collection="categoryMap.d" item="id" open="("
					separator="," close=")">
					#{id}
				</foreach>
			</if>
			<if test="categoryMap.u != null">
				<if test="categoryMap.type != null or categoryMap.d != null">OR</if>
				uc.u_category_id IS NOT NULL
				AND uc.u_category_id IN
				<foreach collection="categoryMap.u" item="id" open="("
					separator="," close=")">
					#{id}
				</foreach>
			</if>
			)
		</if>



		<!-- 정렬 조건 -->
		<choose>
			<when test="sort == 'latest'">				<!-- 최신 -->
				ORDER BY p.product_date DESC
			</when>
			<when test="sort == 'popular'">			<!-- 구매많은순 -->
				ORDER BY p.sale_cnt DESC
			</when>
			<when test="sort == 'views'">				<!-- 조회순 -->
				ORDER BY p.view_cnt DESC
			</when>
			<when test="sort == 'dprice'">				<!-- 낮은가격순 -->
				ORDER BY p.price ASC
			</when>
			<when test="sort == 'uprice'">				<!-- 높은가격순 -->
				ORDER BY p.price DESC
			</when>
			<otherwise>
				ORDER BY p.product_date DESC
			</otherwise>
		</choose>
	</select>
	
	</mapper>
	